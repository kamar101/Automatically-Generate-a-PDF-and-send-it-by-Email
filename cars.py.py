#!/usr/bin/env python3

import json
import locale
import sys
import reports
import emails

def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  max_sales = {'total_sales': 0}
  car_count = {'year':{'count':1,'total_sales':0}}
  max_car_count = {'count': 0, 'total_sales': 0, 'year': 'placeholder'}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # TODO: also handle max sales
    if item['total_sales'] > max_sales['total_sales']:
      max_sales = item
    # TODO: also handle most popular car_year
    car_year = str(item["car"]["car_year"])
    if car_year not in car_count:
      car_count[car_year] = {}
      car_count[car_year]['count'] = 1
      car_count[car_year]['total_sales'] = item['total_sales']
    else:
      car_count[car_year]['count']+=1
      car_count[car_year]['total_sales']+= item['total_sales']
  for item in car_count:
    if max_car_count['count'] < car_count[item]['count']:
      max_car_count = car_count[item]
      max_car_count["year"] = item


  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
    "The {} had the most sales: {}".format(format_car(max_sales['car']),max_sales['total_sales']),
    "The most popular year was {} with {} sales".format(max_car_count['year'], max_car_count['total_sales'])
  ]

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  # TODO: turn this into a PDF report
  table_data = cars_dict_to_table(data)
  additional_info = "<br/>".join(summary)
  reports.generate("/tmp/cars.pdf","Sales summary for last month",additional_info,table_data)
  # TODO: send the PDF report as an email attachment
  body = "\n".join(summary)
  sender = "automation@example.com"
  receiver = "student-02-4a561c2577cf@example.com"
  attachment = "/tmp/cars.pdf"
  subject = "Sales summary for last month"
  email_message = emails.generate(sender, receiver,subject, body,attachment)
  emails.send(email_message)

if __name__ == "__main__":
  main(sys.argv)

